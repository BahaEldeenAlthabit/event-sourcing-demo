// <auto-generated />
using System;
using Anis.Purchases.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anis.Purchases.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210917231209_InitializeDb")]
    partial class InitializeDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Anis.Purchases.Data.UniqueReference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId", "Reference")
                        .IsUnique();

                    b.ToTable("UniqueReferences");
                });

            modelBuilder.Entity("Anis.Purchases.Events.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("_data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Data");

                    b.HasKey("Id");

                    b.HasIndex("AggregateId", "Sequence")
                        .IsUnique();

                    b.ToTable("EventStore");

                    b.HasDiscriminator<string>("Type");
                });

            modelBuilder.Entity("Anis.Purchases.Events.InvoiceCreatedEvent", b =>
                {
                    b.HasBaseType("Anis.Purchases.Events.Event");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("InvoiceCreated");
                });

            modelBuilder.Entity("Anis.Purchases.Events.InvoiceInfoUpdatedEvent", b =>
                {
                    b.HasBaseType("Anis.Purchases.Events.Event");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("InvoiceInfoUpdated");
                });
#pragma warning restore 612, 618
        }
    }
}
